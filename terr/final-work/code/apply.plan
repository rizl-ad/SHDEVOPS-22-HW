Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # module.container_registry.yandex_container_registry.cr will be created
  + resource "yandex_container_registry" "cr" {
      + created_at = (known after apply)
      + folder_id  = "b1guiij21l7nnmc6dleo"
      + id         = (known after apply)
      + labels     = {
          + "project" = "terr-final-work"
        }
      + name       = "cr-terr-final-work"
      + status     = (known after apply)
    }

  # module.db_cluster.yandex_mdb_mysql_cluster.mysql_db_cluster will be created
  + resource "yandex_mdb_mysql_cluster" "mysql_db_cluster" {
      + allow_regeneration_host   = false
      + backup_retain_period_days = (known after apply)
      + created_at                = (known after apply)
      + deletion_protection       = true
      + disk_encryption_key_id    = (known after apply)
      + environment               = "PRODUCTION"
      + folder_id                 = (known after apply)
      + health                    = (known after apply)
      + host_group_ids            = (known after apply)
      + id                        = (known after apply)
      + mysql_config              = (known after apply)
      + name                      = "db-cluster-terr-final-work"
      + network_id                = (known after apply)
      + status                    = (known after apply)
      + version                   = "8.0"

      + access (known after apply)

      + backup_window_start (known after apply)

      + disk_size_autoscaling (known after apply)

      + host {
          + assign_public_ip   = false
          + fqdn               = (known after apply)
          + name               = "db-node-terr-final-work00"
          + replication_source = (known after apply)
          + subnet_id          = (known after apply)
          + zone               = "ru-central1-a"
        }
      + host {
          + assign_public_ip   = false
          + fqdn               = (known after apply)
          + name               = "db-node-terr-final-work01"
          + replication_source = (known after apply)
          + subnet_id          = (known after apply)
          + zone               = "ru-central1-b"
        }

      + maintenance_window (known after apply)

      + performance_diagnostics (known after apply)

      + resources {
          + disk_size          = 10
          + disk_type_id       = "network-hdd"
          + resource_preset_id = "b2.medium"
        }
    }

  # module.db_cluster_pers.yandex_mdb_mysql_database.db will be created
  + resource "yandex_mdb_mysql_database" "db" {
      + cluster_id = (known after apply)
      + id         = (known after apply)
      + name       = "db_terr_final_work"
    }

  # module.db_cluster_pers.yandex_mdb_mysql_user.db_user will be created
  + resource "yandex_mdb_mysql_user" "db_user" {
      + authentication_plugin = (known after apply)
      + cluster_id            = (known after apply)
      + connection_manager    = (known after apply)
      + generate_password     = false
      + global_permissions    = (known after apply)
      + id                    = (known after apply)
      + name                  = "app"
      + password              = (sensitive value)

      + connection_limits (known after apply)

      + permission {
          + database_name = "db_terr_final_work"
          + roles         = [
              + "ALL",
            ]
        }
    }

  # module.db_user_password.data.yandex_lockbox_secret_version.secret_version will be read during apply
  # (config refers to values not yet known)
 <= data "yandex_lockbox_secret_version" "secret_version" {
      + entries    = (known after apply)
      + id         = (known after apply)
      + secret_id  = (known after apply)
      + version_id = (known after apply)
    }

  # module.db_user_password.yandex_lockbox_secret.secret will be created
  + resource "yandex_lockbox_secret" "secret" {
      + created_at          = (known after apply)
      + deletion_protection = true
      + folder_id           = "b1guiij21l7nnmc6dleo"
      + id                  = (known after apply)
      + name                = "db-pass-terr-final-work"
      + status              = (known after apply)

      + password_payload_specification {
          + include_digits       = true
          + include_lowercase    = true
          + include_punctuation  = true
          + include_uppercase    = true
          + included_punctuation = "!#$%&?@[]^"
          + length               = 25
          + password_key         = "db_cluster_user_password"
        }
    }

  # module.db_user_password.yandex_lockbox_secret_version.secret_version will be created
  + resource "yandex_lockbox_secret_version" "secret_version" {
      + id        = (known after apply)
      + secret_id = (known after apply)
    }

  # module.security_group.yandex_vpc_security_group.sg will be created
  + resource "yandex_vpc_security_group" "sg" {
      + created_at = (known after apply)
      + egress     = [
          + {
              + description       = "разрешить весь исходящий трафик"
              + from_port         = 0
              + id                = (known after apply)
              + labels            = (known after apply)
              + port              = -1
              + protocol          = "TCP"
              + to_port           = 65365
              + v4_cidr_blocks    = [
                  + "0.0.0.0/0",
                ]
              + v6_cidr_blocks    = []
                # (2 unchanged attributes hidden)
            },
        ]
      + folder_id  = "b1guiij21l7nnmc6dleo"
      + id         = (known after apply)
      + ingress    = [
          + {
              + description       = "разрешить входящий http"
              + from_port         = -1
              + id                = (known after apply)
              + labels            = (known after apply)
              + port              = 80
              + protocol          = "TCP"
              + to_port           = -1
              + v4_cidr_blocks    = [
                  + "0.0.0.0/0",
                ]
              + v6_cidr_blocks    = []
                # (2 unchanged attributes hidden)
            },
          + {
              + description       = "разрешить входящий https"
              + from_port         = -1
              + id                = (known after apply)
              + labels            = (known after apply)
              + port              = 443
              + protocol          = "TCP"
              + to_port           = -1
              + v4_cidr_blocks    = [
                  + "0.0.0.0/0",
                ]
              + v6_cidr_blocks    = []
                # (2 unchanged attributes hidden)
            },
          + {
              + description       = "разрешить входящий ssh"
              + from_port         = -1
              + id                = (known after apply)
              + labels            = (known after apply)
              + port              = 22
              + protocol          = "TCP"
              + to_port           = -1
              + v4_cidr_blocks    = [
                  + "0.0.0.0/0",
                ]
              + v6_cidr_blocks    = []
                # (2 unchanged attributes hidden)
            },
          + {
              + description       = "разрешить входящий на порт 8090"
              + from_port         = -1
              + id                = (known after apply)
              + labels            = (known after apply)
              + port              = 8090
              + protocol          = "TCP"
              + to_port           = -1
              + v4_cidr_blocks    = [
                  + "0.0.0.0/0",
                ]
              + v6_cidr_blocks    = []
                # (2 unchanged attributes hidden)
            },
        ]
      + labels     = (known after apply)
      + name       = "sg-terr-final-work"
      + network_id = (known after apply)
      + status     = (known after apply)
    }

  # module.vm_app.local_file.cloud_init will be created
  + resource "local_file" "cloud_init" {
      + content              = (sensitive value)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "vm_app/cloud-init.yaml"
      + id                   = (known after apply)
    }

  # module.vm_app.yandex_compute_instance.app[0] will be created
  + resource "yandex_compute_instance" "app" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = "vm-terr-final-work-app01"
      + id                        = (known after apply)
      + labels                    = {
          + "owner"   = (sensitive value)
          + "project" = "terr-final-work"
        }
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = (known after apply)
      + name                      = "vm-terr-final-work-app01"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v2"
      + service_account_id        = (sensitive value)
      + status                    = (known after apply)
      + zone                      = (known after apply)

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd8hjrk74m4jvmvl5gi6"
              + name        = (known after apply)
              + size        = 10
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + metadata_options (known after apply)

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy (known after apply)

      + resources {
          + core_fraction = 5
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

  # module.vpc.yandex_vpc_network.network_terr_final will be created
  + resource "yandex_vpc_network" "network_terr_final" {
      + created_at                = (known after apply)
      + default_security_group_id = (known after apply)
      + folder_id                 = (known after apply)
      + id                        = (known after apply)
      + labels                    = (known after apply)
      + name                      = "network-vpc-terr-final-work"
      + subnet_ids                = (known after apply)
    }

  # module.vpc.yandex_vpc_subnet.subnet_terr_final[0] will be created
  + resource "yandex_vpc_subnet" "subnet_terr_final" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "subnet-vpc-terr-final-work-0"
      + network_id     = (known after apply)
      + v4_cidr_blocks = [
          + "10.0.10.0/24",
          + "10.0.11.0/24",
          + "10.0.12.0/24",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-a"
    }

  # module.vpc.yandex_vpc_subnet.subnet_terr_final[1] will be created
  + resource "yandex_vpc_subnet" "subnet_terr_final" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "subnet-vpc-terr-final-work-1"
      + network_id     = (known after apply)
      + v4_cidr_blocks = [
          + "10.0.20.0/24",
          + "10.0.21.0/24",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-b"
    }

  # module.vpc.yandex_vpc_subnet.subnet_terr_final[2] will be created
  + resource "yandex_vpc_subnet" "subnet_terr_final" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "subnet-vpc-terr-final-work-2"
      + network_id     = (known after apply)
      + v4_cidr_blocks = [
          + "10.0.30.0/24",
          + "10.0.31.0/24",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-d"
    }

Plan: 13 to add, 0 to change, 0 to destroy.